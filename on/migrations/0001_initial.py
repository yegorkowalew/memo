# Generated by Django 2.2.6 on 2019-10-26 16:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Couterparty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('path', models.FilePathField(blank=True, null=True, verbose_name='Путь к файлу')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
            },
        ),
        migrations.CreateModel(
            name='OfficeNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'служебная записка',
                'verbose_name_plural': 'служебные записки',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_id', models.IntegerField(unique=True, verbose_name='ID')),
                ('shipment_from', models.DateField(blank=True, null=True, verbose_name='Отгрузка "от"')),
                ('shipment_before', models.DateField(blank=True, null=True, verbose_name='Отгрузка "до"')),
                ('personal_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='п/н')),
                ('product_name', models.CharField(max_length=255, verbose_name='Продукция')),
                ('product_text', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('number', models.CharField(blank=True, max_length=255, null=True, verbose_name='№ Заказа')),
                ('amount', models.FloatField(blank=True, null=True, verbose_name='Кол-во')),
                ('sn_date', models.DateField(blank=True, null=True, verbose_name='Дата СЗ')),
                ('sn_date_fact', models.DateField(blank=True, null=True, verbose_name='Дата СЗ Факт')),
                ('pickup_must', models.BooleanField(default=True, verbose_name='Комплектовочные Выдаются')),
                ('pickup_plan_days', models.SmallIntegerField(blank=True, null=True, verbose_name='Комплектовочные План Дней')),
                ('pickup_plan_date', models.DateField(blank=True, null=True, verbose_name='Комплектовочные План Дата')),
                ('pickup_fact_date', models.DateField(blank=True, null=True, verbose_name='Комплектовочные Факт Дата')),
                ('shipping_must', models.BooleanField(default=True, verbose_name='Отгрузочные Выдаются')),
                ('shipping_plan_days', models.SmallIntegerField(blank=True, null=True, verbose_name='Отгрузочные План Дней')),
                ('shipping_plan_date', models.DateField(blank=True, null=True, verbose_name='Отгрузочные План Дата')),
                ('shipping_fact_date', models.DateField(blank=True, null=True, verbose_name='Отгрузочные Факт Дата')),
                ('design_must', models.BooleanField(default=True, verbose_name='Конструкторская документация Выдается')),
                ('design_plan_days', models.SmallIntegerField(blank=True, null=True, verbose_name='Конструкторская документация План Дней')),
                ('design_plan_date', models.DateField(blank=True, null=True, verbose_name='Конструкторская документация План Дата')),
                ('design_fact_date', models.DateField(blank=True, null=True, verbose_name='Конструкторская документация Факт Дата')),
                ('material_must', models.BooleanField(default=False, verbose_name='Материалы Выдаются')),
                ('material_plan_days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Материалы План Дней')),
                ('material_plan_date', models.DateField(blank=True, null=True, verbose_name='Материалы План Дата')),
                ('material_fact_date', models.DateField(blank=True, null=True, verbose_name='Материалы Факт Дата')),
                ('black_metal_must', models.BooleanField(default=False, verbose_name='Черный метал Выдается')),
                ('black_metal_plan_days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Черный метал План Дней')),
                ('black_metal_plan_date', models.DateField(blank=True, null=True, verbose_name='Черный метал План Дата')),
                ('black_metal_fact_date', models.DateField(blank=True, null=True, verbose_name='Черный метал Факт Дата')),
                ('galvanized_metal_plan_days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Оцинкованный метал План Дней')),
                ('galvanized_metal_plan_date', models.DateField(blank=True, null=True, verbose_name='Оцинкованный метал План Дата')),
                ('galvanized_fact_date', models.DateField(blank=True, null=True, verbose_name='Оцинкованный метал Факт Дата')),
                ('galvanized_metal_must', models.BooleanField(default=True, verbose_name='Чугун Выдается')),
                ('cast_iron_plan_days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Чугун План Дней')),
                ('cast_iron_plan_date', models.DateField(blank=True, null=True, verbose_name='Чугун План Дата')),
                ('cast_iron_fact_date', models.DateField(blank=True, null=True, verbose_name='Чугун Факт Дата')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('couterparty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='on.Couterparty', verbose_name='Контрагент')),
                ('sn_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='on', to='on.OfficeNote')),
                ('sn_no_amended', models.ManyToManyField(blank=True, null=True, to='on.OfficeNote', verbose_name='№ СЗ')),
            ],
            options={
                'verbose_name': 'OnItm',
                'verbose_name_plural': 'OnItms',
            },
        ),
    ]
